# from https://distillery.rbind.io/posts/2021-03-18-use-github-actions-with-r-markdown-and-distill/
name: Render & Deploy Report Site
# on: [push]
on: 
  push:
  schedule:
    - cron: '55 12,13 * * *'
#    - cron: '55 10,15 * * *'
#    - cron: '40 11,12,15 * * 1,2,3,4,5'
# https://crontab.guru/#5_*_*_*_*


permissions:
  contents: write
  
jobs:
  render:
    name: Render report
    runs-on: windows-2025
    env:
      R_LIBS_USER: ${{ github.workspace }}/.Rlibrary
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up R
      uses: r-lib/actions/setup-r@v2
      with:
          r-version: '4.2.0' 

    - name: Set up Pandoc
      uses: r-lib/actions/setup-pandoc@v2

    - name: Cache R packages
      uses: actions/cache@v3
      with:
        path: ${{ env.R_LIBS_USER }}
        key: ${{ runner.os }}-R-${{ hashFiles('**/*.R', '**/*.Rmd') }}
        restore-keys: |
          ${{ runner.os }}-R-

    - name: Install R packages
      shell: Rscript {0}
      run: |
        install.packages(c("remotes","reshape2","plyr","zoo","lubridate",
        "RcppRoll","dataRetrieval","downloadthis","rvest","httr",
        "mapmisc","future","future.apply","flextable","ggplot2"))
    
    
    - name: Install terra and raster from rspatial and others
      shell: Rscript {0}
      run: |
        remotes::install_github("SwampThingPaul/AnalystHelper")
        remotes::install_github("SwampThingPaul/EVERSpatDat")
        install.packages('sf', type = "binary")
        install.packages('terra', repos = c('https://rspatial.r-universe.dev', 'https://cloud.r-project.org'))
        install.packages('raster', repos = c('https://rspatial.r-universe.dev', 'https://cloud.r-project.org'))
      
    - name: Download data
      shell: Rscript {0}
      run: |
        source("./report/NOAA_RS_Download.R")
        # source("./report/USACE_download.R")
    
    - name: Render Site
      shell: Rscript {0}
      run: |
          rmarkdown::render("./report/REPORT.Rmd", output_format = "html_document",clean = TRUE, envir = new.env())
    
    - name: setup git config
      run: |
        # setup the username and email.
        git config user.name "SwampThingPaul"
        git config user.email "<>"
      
    - name: Commit results
      run: |
        git add -A 
        git commit -m 'update report' || echo "No changes to commit"
        git pull --rebase origin master # git pull --ff-only
        git push origin || echo "No changes to commit"